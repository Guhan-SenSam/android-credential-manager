{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/loginProviders/types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,iBAKX;AALD,WAAY,iBAAiB;IAC3B,2DAAsC,CAAA;IACtC,sCAAiB,CAAA;IACjB,mDAA8B,CAAA;IAC9B,wCAAmB,CAAA;AACrB,CAAC,EALW,iBAAiB,KAAjB,iBAAiB,QAK5B","sourcesContent":["export enum LoginProviderType {\n  USERNAME_PASSWORD = \"UsernamePassword\",\n  GOOGLE = \"Google\",\n  GOOGLE_BUTTON = \"GoogleButton\",\n  PASSKEY = \"PassKey\",\n}\n\nexport interface LoginProvider {\n  readonly name: LoginProviderType;\n  autoSelect?: boolean;\n  serialize(): object;\n}\n\ninterface BaseLoginProviderProps {\n  autoSelect?: boolean;\n}\n\nexport interface UsernamePasswordProviderProps extends BaseLoginProviderProps {\n  allowedUserIds?: string[];\n}\n\nexport interface GoogleProviderProps extends BaseLoginProviderProps {\n  serverClientId: string;\n  authorizedAccountsOnly?: boolean;\n  nonce?: string;\n  requireVerifiedPhoneNumber?: boolean;\n}\n\nexport interface GoogleButtonProviderProps extends BaseLoginProviderProps {\n  serverClientId: string;\n  nonce?: string;\n  domainFilter?: string;\n}\n\nexport interface PassKeyProviderProps {\n  challenge: string;\n  allowCredentials?: {\n    type: \"public-key\"; // Always \"public-key\"\n    id: string; // Base64URL-encoded credential ID\n    transports?: string[]; // List of transports (e.g., \"usb\", \"ble\", \"nfc\")\n  }[];\n  timeout: number;\n  userVerification: string;\n  rpId: string;\n}\n\nexport interface PassKeyCreatorProps {\n  challenge: string;\n  app: {\n    name: string;\n    domain: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  timeout?: number;\n}\n"]}