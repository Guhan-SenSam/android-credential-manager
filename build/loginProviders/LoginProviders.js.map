{"version":3,"file":"LoginProviders.js","sourceRoot":"","sources":["../../src/loginProviders/LoginProviders.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  GoogleButtonProviderProps,\n  GoogleProviderProps,\n  LoginProvider,\n  LoginProviderType,\n  PassKeyCreatorProps,\n  PassKeyProviderProps,\n  UsernamePasswordProviderProps,\n} from \"./types\";\n\nexport class UsernamePasswordProvider implements LoginProvider {\n  readonly name = LoginProviderType.USERNAME_PASSWORD;\n  public allowedUserIds: string[];\n  public autoSelect: boolean;\n\n  constructor({\n    allowedUserIds = [],\n    autoSelect = false,\n  }: UsernamePasswordProviderProps = {}) {\n    this.allowedUserIds = allowedUserIds;\n    this.autoSelect = autoSelect;\n  }\n\n  serialize(): object {\n    return {\n      name: this.name,\n      options: {\n        allowedUserIds: this.allowedUserIds,\n        autoSelect: this.autoSelect,\n      },\n    };\n  }\n}\n\nexport class GoogleProvider implements LoginProvider {\n  readonly name = LoginProviderType.GOOGLE;\n  public autoSelect: boolean;\n  public authorizedAccountsOnly: boolean;\n  public nonce: string;\n  public requireVerifiedPhoneNumber: boolean;\n  public serverClientId: string;\n\n  constructor({\n    serverClientId,\n    autoSelect = false,\n    authorizedAccountsOnly = false,\n    nonce = \"\",\n    requireVerifiedPhoneNumber = false,\n  }: GoogleProviderProps) {\n    if (!serverClientId) {\n      throw new Error(\"serverClientId is required\");\n    }\n    this.autoSelect = autoSelect;\n    this.requireVerifiedPhoneNumber = requireVerifiedPhoneNumber;\n    this.nonce = nonce;\n    this.authorizedAccountsOnly = authorizedAccountsOnly;\n    this.serverClientId = serverClientId;\n  }\n\n  serialize(): object {\n    return {\n      name: this.name,\n      options: {\n        autoSelect: this.autoSelect,\n        authorizedAccountsOnly: this.authorizedAccountsOnly,\n        nonce: this.nonce,\n        requireVerifiedPhoneNumber: this.requireVerifiedPhoneNumber,\n        serverClientId: this.serverClientId,\n      },\n    };\n  }\n}\n\nexport class GoogleButtonProvider implements LoginProvider {\n  readonly name = LoginProviderType.GOOGLE_BUTTON;\n  public serverClientId: string;\n  public nonce?: string;\n  public domainFilter?: string;\n\n  constructor({\n    serverClientId,\n    nonce,\n    domainFilter,\n  }: GoogleButtonProviderProps) {\n    if (!serverClientId) {\n      throw new Error(\"serverClientId is required\");\n    }\n    this.serverClientId = serverClientId;\n    this.nonce = nonce;\n    this.domainFilter = domainFilter;\n  }\n\n  serialize(): object {\n    return {\n      name: this.name,\n      options: {\n        serverClientId: this.serverClientId,\n        nonce: this.nonce,\n        domainFilter: this.domainFilter,\n      },\n    };\n  }\n}\n\nexport class PasskeyProvider implements LoginProvider {\n  readonly name = LoginProviderType.PASSKEY;\n  public challenge: string;\n  public allowCredentials?: {\n    type: \"public-key\"; // Always\n    id: string; // Base64URL-encoded credential ID\n    transports?: string[]; // List of transports (e.g., \"usb\", \"ble\", \"nfc\")\n  }[];\n  public timeout: number;\n  public userVerification: string;\n  public rpId: string;\n\n  constructor({\n    challenge,\n    allowCredentials,\n    timeout,\n    userVerification,\n    rpId,\n  }: PassKeyProviderProps) {\n    this.challenge = challenge;\n    this.allowCredentials = allowCredentials;\n    this.timeout = timeout;\n    this.userVerification = userVerification;\n    this.rpId = rpId;\n  }\n\n  serialize(): object {\n    return {\n      name: this.name,\n      options: {\n        challenge: this.challenge,\n        allowCredentials: this.allowCredentials,\n        timeout: this.timeout,\n        userVerification: this.userVerification,\n        rpId: this.rpId,\n      },\n    };\n  }\n}\n\nexport class PassKeyCreator implements PassKeyCreatorProps {\n  challenge: string;\n  app: {\n    name: string;\n    domain: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  timeout?: number;\n\n  constructor({ challenge, app, user, timeout }: PassKeyCreatorProps) {\n    this.challenge = challenge;\n    this.app = app;\n    this.user = user;\n    this.timeout = timeout;\n  }\n\n  generateResponse(): string {\n    return JSON.stringify({\n      challenge: this.challenge,\n      rp: {\n        name: this.app.name,\n        id: this.app.domain,\n      },\n      user: {\n        id: this.user.id,\n        name: this.user.name,\n        displayName: this.user.displayName,\n      },\n      pubKeyCredParams: [\n        {\n          type: \"public-key\",\n          alg: -7,\n        },\n        {\n          type: \"public-key\",\n          alg: -257,\n        },\n      ],\n      timeout: this.timeout,\n      attestation: \"none\",\n      authenticatorSelection: {\n        authenticatorAttachment: \"platform\",\n        requireResidentKey: true,\n        residentKey: \"required\",\n        userVerification: \"required\",\n      },\n    });\n  }\n}\n"]}